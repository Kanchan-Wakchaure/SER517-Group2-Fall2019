{"version":3,"sources":["components/about/images/namratha.png","components/about/images/kanchan.jpg","components/about/images/mounika.jpg","components/about/images/kaustuv.jpg","components/about/images/raisa.jpg","store/actions/auth.js","store/actions/actionTypes.js","components/header/Header.js","components/home/Homepage.js","components/footer/Footer.js","Services/SignupService.js","components/register/Signup.js","components/login/Login.js","Services/EventsService.js","components/map/Map.js","components/createEvent/CreateEvent.js","components/eventsList/ListEvent.js","components/map/mapStyles/retromapStyles.js","components/map/MapControl.js","components/map/MapView.js","Routes.js","Services/AlertService.js","components/email/Email.js","components/text/Text.js","components/about/About.js","components/map/MapPreview.js","App.js","serviceWorker.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["module","exports","authSuccess","token","type","authFail","error","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","Header","props","handleClick","event","setState","anchorEl","currentTarget","handleClose","state","className","this","loading","CircularProgress","color","style","align","AppBar","position","height","alignContent","Toolbar","Button","href","Typography","variant","textTransform","IconButton","edge","aria-label","isAuthenticated","marginLeft","fontSize","aria-controls","aria-haspopup","onClick","Menu","id","keepMounted","open","Boolean","onClose","MenuItem","React","Component","connect","actions","Homepage","Copyright","Link","Date","getFullYear","Footer","backgroundColor","Container","maxWidth","gutterBottom","SignupService","user","axios","post","API_URL","signupService","Signup","userDetails","first_name","last_name","phone_number","email","password","handleSubmit","bind","handlechange","signup","then","result","NotificationManager","success","catch","preventDefault","handleRegister","history","push","inputPropName","newState","Object","assign","target","value","component","CssBaseline","noValidate","Grid","container","spacing","alignItems","justify","marginTop","item","xs","Avatar","sm","TextField","autoComplete","name","required","fullWidth","label","autoFocus","onChange","password1","Login","onAuth","errorMessage","message","username","res","data","key","expirationDate","getTime","setItem","err","EventsService","headers","response","get","Geocode","setApiKey","enableDebug","eventService","Map","handleEmailChange","idx","evt","newNotifyUsers","notifyUsers","map","notifyUser","sidx","handlePhoneChange","phone","handleInputs","concat","handleRemoveInput","filter","s","getState","addressArray","i","length","types","long_name","onInfoWindowClose","onMarkerDragEnd","newLat","latLng","lat","newLng","lng","fromLatLng","address","results","formatted_address","markerPosition","mapPosition","console","onPlaceSelected","place","log","latValue","geometry","location","lngValue","eventDetails","title","date","time","duration","center","handleInputChange","ref","createEvent","JSON","stringify","getInitialState","status","warning","undefined","destination","handleCreate","nextProps","nextState","getItem","AsyncMap","withScriptjs","withGoogleMap","google","defaultZoom","zoom","defaultCenter","padding","margin","draggable","onDragEnd","width","paddingLeft","paddingRight","marginBottom","marginRight","FormGroup","textAlign","InputLabelProps","shrink","readOnly","googleMapURL","loadingElement","containerElement","mapElement","paddingBottom","InputAdornment","size","CreateEvent","ListEvent","events","show","self","getEvents","info","e","MapControl","context","MAP","controlDiv","document","createElement","controls","removeAt","divIndex","createPortal","children","contextTypes","PropTypes","object","MapWrapped","originMarker","useState","setEvents","directions","setDirections","selectedPark","setSelectedPark","setError","setShow","window","labels","split","useEffect","listener","addEventListener","removeEventListener","waypoints","p","parseFloat","long","stopover","origin","maps","DirectionsService","route","travelMode","TravelMode","DRIVING","DirectionsStatus","OK","class","defaultLabel","defaultIcon","defaultOptions","styles","mapStyles","ControlPosition","TOP_RIGHT","options","suppressMarkers","park","onCloseClick","process","REACT_APP_GOOGLE_KEY","Alert","alertService","Email","getEmail","Text","getText","useStyles","makeStyles","theme","body","palette","common","white","link","heroContent","cardHeader","grey","cardPricing","display","justifyContent","tiers","img","kanchan","buttonText","buttonLink","buttonVariant","namratha","mounika","kaustuv","raisa","About","classes","Fragment","tier","md","Card","CardHeader","titleTypographyProps","subheaderTypographyProps","CardContent","src","CardActions","MapPreview","progress","path","velocity","initialDate","getDistance","componentDidMount","interval","setInterval","moveObject","componentWillUnmount","clearInterval","distance","coordinates","nextLine","find","lastLine","lastLineLatLng","LatLng","nextLineLatLng","totalDistance","percentage","spherical","interpolate","renderData","t","items","Number","alert","finally","array","lat1","lng1","latLong1","lat2","lng2","latLong2","computeDistanceBetween","componentWillMount","render","strokeColor","MapComponent","App","onTryAutoSignup","exact","hostname","match","updateObject","oldObject","updatedProperties","initialState","authStart","action","authLogout","reducer","composeEnhances","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","app","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4efceb20.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/namratha.dcaf158a.png\";","module.exports = __webpack_public_path__ + \"static/media/kanchan.16ccc7a6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/mounika.0fa97970.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kaustuv.8980d0e2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/raisa.4269d6a0.jpg\";","import axios from 'axios';\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    }\n}\n\nexport const authSuccess = token => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        token: token\n    }\n}\n\nexport const authFail = error => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    }\n}\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n}\n\nexport const checkAuthTimeout = expirationTime => {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(logout());\n        }, expirationTime * 1000)\n    }\n}\n\nexport const authLogin = (username, password) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://127.0.0.1:8000/rest-auth/login/', {\n            username: username,\n            password: password\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const authSignup = (username, email, password1, password2) => {\n    return dispatch => {\n        dispatch(authStart());\n        axios.post('http://127.0.0.1:8000/rest-auth/registration/', {\n            username: username,\n            email: email,\n            password1: password1,\n            password2: password2\n        })\n        .then(res => {\n            const token = res.data.key;\n            const expirationDate = new Date(new Date().getTime() + 3600 * 1000);\n            localStorage.setItem('token', token);\n            localStorage.setItem('expirationDate', expirationDate);\n            dispatch(authSuccess(token));\n            dispatch(checkAuthTimeout(3600));\n        })\n        .catch(err => {\n            dispatch(authFail(err))\n        })\n    }\n}\n\nexport const authCheckState = () => {\n    return dispatch => {\n        const token = localStorage.getItem('token');\n        if (token === undefined) {\n            dispatch(logout());\n        } else {\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\n            if ( expirationDate <= new Date() ) {\n                dispatch(logout());\n            } else {\n                dispatch(authSuccess(token));\n                dispatch(checkAuthTimeout( (expirationDate.getTime() - new Date().getTime()) / 1000) );\n            }\n        }\n    }\n}","export const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport HomeIcon from '@material-ui/icons/Home';\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/auth';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n/*\n    Author: Kanchan Wakchaure\n    Date: 10-04-2019\n    Description: Header component for homepage\n    References: https://material-ui.com\n*/\n\nclass Header extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n          anchorEl: null\n        };\n      }\n\n      handleClick = (event) => {\n        this.setState({\n          anchorEl: event.currentTarget,\n        })\n      };\n\n\n      handleClose = () => {\n        this.setState({\n          anchorEl: null,\n        })\n      };\n   render() {\n      return (\n        <div className=\"root\">\n              {\n                    this.props.loading ?\n\n                    <CircularProgress color=\"secondary\"\n                    style={{\n                      align: 'center'}}/>\n\n                    :\n          <AppBar position=\"fixed\" style = {{height: '50px', alignContent: 'right'}}>\n            <Toolbar style={{height: '20px'}}>\n             <Button color=\"inherit\" href=\"/Homepage\">\n              <Typography variant=\"h4\" className=\"title\" style={{textTransform: \"none\"}}>\n                Travlendar\n              </Typography>\n              </Button>\n              <IconButton edge=\"start\" className=\"menuButton\" color=\"inherit\" aria-label=\"menu\" href=\"/Homepage\" style={{'marginLeft':'0px'}}>\n                        <HomeIcon/>\n              </IconButton>\n              {\n                this.props.isAuthenticated ?\n                (\n                  <div style={{marginLeft: 'auto'}}>\n                    <Button color=\"inherit\" href=\"/CreateEvent\" style={{textTransform: \"none\", fontSize: '16px'}}>Add Event</Button>\n                    <Button color=\"inherit\" href=\"/listevent\" style={{textTransform: \"none\", fontSize: '16px'}}>Agenda</Button>\n                    <Button color=\"inherit\" href=\"/map\" style={{textTransform: \"none\", fontSize: '16px'}}>View Events</Button>\n                    <Button color=\"inherit\" href=\"/previewroute\" style={{textTransform: \"none\", fontSize: '16px'}}>Preview Route</Button>\n                    <Button color=\"inherit\" \n                            style={{textTransform: \"none\", fontSize: '16px'}}\n                            className=\"menu_button\" \n                            aria-controls=\"simple-menu\" \n                            aria-haspopup=\"true\" \n                            onClick={this.handleClick}>\n                    Alert\n                    </Button>\n                    <Menu\n                      id=\"simple-menu\"\n                      anchorEl={this.state.anchorEl}\n                      keepMounted\n                      open={Boolean(this.state.anchorEl)}\n                      onClose={this.handleClose}\n                    >\n                    <MenuItem>\n                      <Button color=\"inherit\" href=\"/textalert\" style={{textTransform: \"none\", fontSize: '16px'}}>Send Text Alert</Button>\n                    </MenuItem>\n                    <MenuItem>\n                      <Button color=\"inherit\" href=\"/emailalert\" style={{textTransform: \"none\", fontSize: '16px'}}>Send Email Alert</Button>\n                    </MenuItem>\n                    </Menu>\n                    <Button color=\"inherit\" href=\"/about\" style={{textTransform: \"none\", fontSize: '16px'}}>About Us</Button>\n                    <Button color=\"inherit\" onClick={this.props.logout} style={{textTransform: \"none\", fontSize: '16px'}}>Logout</Button>\n                    </div>)\n                    :\n                    (\n                      <div style={{marginLeft: 'auto'}}>\n                        <Button color=\"inherit\" href=\"/about\" style={{textTransform: \"none\", fontSize: '16px'}}>About Us</Button>\n                        <Button color=\"inherit\" href=\"/Login\" style={{textTransform: \"none\", fontSize: '16px'}}>Login</Button>\n                        <Button color=\"inherit\" href=\"/Signup\" style={{textTransform: \"none\", fontSize: '16px'}}>Sign Up</Button>\n                      </div>\n                    )\n                }\n            </Toolbar>\n          </AppBar>\n              }\n        </div>\n      );\n    }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n      loading: state.loading,\n      error: state.error\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logout: () => dispatch(actions.logout())\n    }\n}\n\nexport default (connect(mapStateToProps, mapDispatchToProps)(Header));","import React from \"react\";\nimport './Homepage.css';\n\nclass Homepage extends React.Component{\n    render() {\n        return(\n\t        <div>\n\n\t\t\t</div>\n\t    );\n\t}\n}\n\nexport default Homepage;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Container from '@material-ui/core/Container';\nimport './Footer.css';\n\n/*\n    Author: Kanchan Wakchaure\n    Date: 10-04-2019\n    Description: Footer component for homepage\n    References: https://material-ui.com\n*/\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Travlendar\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nclass Footer extends React.Component{\n    render(){\n        return(\n            <footer className=\"footer\" style={{backgroundColor: '#3F51B5'}}>\n                <Container maxWidth=\"lg\">\n                    <Typography variant=\"h6\" align=\"center\" style={{color: '#fafafa'}} gutterBottom>\n                        <b>Travlendar</b>\n                    </Typography>\n                    <Copyright />\n                </Container>\n            </footer>\n        );\n    }\n\n}\n\nexport default Footer;","import axios from 'axios';\n\n/*\n    Author: Kanchan Wakchaure\n    Date: 10-05-2019\n    Description: Signup service to post user details\n    References: https://material-ui.com\n*/\n\nconst API_URL = 'https://asutravlendar.herokuapp.com/';\n\nexport default class SignupService{\n\n    signup(user){\n        const url = API_URL+'/api/users/signup/';\n        return axios.post(url,user);\n    }\n\n}","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport './Signup.css';\nimport SignupService from '../../Services/SignupService';\nimport { NotificationManager } from 'react-notifications';\n\n/*\n    Author: Kanchan Wakchaure\n    Date: 10-01-2019\n    Description: Sign up page for new users to register\n    References: https://reactstrap.github.io/\n*/\n\nconst signupService = new SignupService();\n\nclass Signup extends React.Component{\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            userDetails: {\n                first_name: '',\n                last_name: '',\n                phone_number: '',\n                email: '',\n                password: ''\n            }\n        };\n\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handlechange = this.handlechange.bind(this);\n\t}\n\n    handleRegister(){\n        signupService.signup(\n            {\n                \"first_name\": this.state.userDetails.first_name,\n                \"last_name\": this.state.userDetails.last_name,\n                \"phone_number\": this.state.userDetails.phone_number,\n                \"email\": this.state.userDetails.email,\n                \"password1\": this.state.userDetails.password,\n                \"password2\": this.state.userDetails.password,\n                \"username\": this.state.userDetails.email,\n            }\n        ).then((result)=>{\n          NotificationManager.success(\"You are registered successfully!\", \"Successful\");\n        }).catch(()=>{\n          NotificationManager.error('There was an error! Please provide valid email, phone and password.');\n        });\n\n    }\n\n    handleSubmit(user){\n        user.preventDefault();\n        this.handleRegister();\n        this.props.history.push('/');\n    }\n\n\n    handlechange(event, inputPropName)\n    {\n        const newState = Object.assign({}, this.state);\n        newState.userDetails[inputPropName] = event.target.value;\n        this.setState(newState);\n    }\n\n    render(){\n\n        return(\n                    <Container component=\"main\" maxWidth=\"xs\" className=\"test\">\n                    <CssBaseline />\n                    <div className=\"paper\">\n                        <form className=\"form\" noValidate>\n                            <Grid container spacing={2}\n                                  alignItems=\"center\"\n                                  justify=\"center\"\n                                  style={{backgroundColor: 'white', marginTop: '10px' }} >\n                                <Grid item xs={12} align=\"center\">\n                                    <Avatar className=\"avatar\">\n                                        <LockOutlinedIcon />\n                                    </Avatar>\n                                </Grid>\n                                <Grid item xs={12} align=\"center\">\n                                    <Typography component=\"h1\" variant=\"h5\" >\n                                        Sign up\n                                    </Typography>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField autoComplete=\"fname\"\n                                               name=\"first_name\"\n                                               variant=\"outlined\"\n                                               required\n                                               fullWidth\n                                               id=\"firstname\"\n                                               label=\"First Name\"\n                                               autoFocus\n                                               value={this.state.userDetails.first_name}\n                                               onChange = { event => this.handlechange(event, 'first_name') }/>\n                                </Grid>\n                                <Grid item xs={12} sm={6}>\n                                    <TextField autoComplete=\"lname\"\n                                               name=\"last_name\"\n                                               variant=\"outlined\"\n                                               required\n                                               fullWidth\n                                               id=\"lastname\"\n                                               label=\"Last Name\"\n                                               autoFocus\n                                               value={this.state.userDetails.last_name}\n                                               onChange = { event => this.handlechange(event, 'last_name') }/>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField variant=\"outlined\"\n                                               required\n                                               fullWidth\n                                               id=\"phone\"\n                                               label=\"Phone Number\"\n                                               name=\"phone_number\"\n                                               autoComplete=\"phone\"\n                                               value={this.state.userDetails.phone_number}\n                                               onChange = { user => this.handlechange(user, 'phone_number') }/>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField variant=\"outlined\"\n                                               required\n                                               fullWidth\n                                               id=\"email\"\n                                               label=\"Email Address\"\n                                               name=\"email\"\n                                               autoComplete=\"email\"\n                                               value={this.state.userDetails.email}\n                                               onChange = { user => this.handlechange(user, 'email') }/>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField variant=\"outlined\"\n                                               required\n                                               fullWidth\n                                               name=\"password\"\n                                               label=\"Password\"\n                                               type=\"password\"\n                                               id=\"password\"\n                                               autoComplete=\"current-password\"\n                                               value={this.state.userDetails.password1}\n                                               onChange = { user => this.handlechange(user, 'password') }/>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Button type=\"submit\"\n                                            fullWidth\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            className=\"submit\"\n                                            onClick={this.handleSubmit}>\n                                        Sign Up\n                                    </Button>\n                                </Grid>\n    \n                                <Grid item align=\"center\">\n                                    <Link href=\"/Login\" variant=\"body2\">\n                                        Already have an account? Login\n                                    </Link>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </div>\n                </Container>\n\n        );\n    }\n}\n\nexport default Signup;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport './Login.css';\r\nimport * as actions from '../../store/actions/auth';\r\nimport { connect } from 'react-redux';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nclass Login extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            userDetails: {\r\n                email: '',\r\n                password: ''\r\n            }\r\n        };\r\n\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.handlechange = this.handlechange.bind(this);\r\n\t}\r\n\r\n   handleSubmit(user){\r\n        user.preventDefault();\r\n        this.props.onAuth(this.state.userDetails.email, this.state.userDetails.password);\r\n        this.props.history.push('/Homepage');\r\n    } \r\n\r\n    handlechange(user, inputPropName)\r\n    {\r\n        const newState = Object.assign({}, this.state);\r\n        newState.userDetails[inputPropName] = user.target.value;\r\n        this.setState(newState);\r\n    }\r\n\r\n    render(){\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        return(\r\n            <div>\r\n                {errorMessage}\r\n                {\r\n                    this.props.loading ?\r\n\r\n                    <CircularProgress color=\"secondary\" style={{align: 'center'}}/>\r\n                    \r\n                    :\r\n\r\n                    <Container component=\"main\" maxWidth=\"xs\" className=\"test\">\r\n                    <CssBaseline />\r\n                    <div className=\"paper\">\r\n                        <form className=\"form\">\r\n                            <Grid container spacing={2}\r\n                                  alignItems=\"center\"\r\n                                  justify=\"center\"\r\n                                  style={{backgroundColor: 'white', marginTop: '10px' }} >\r\n                                <Grid item xs={12} align=\"center\">\r\n                                    <Avatar className=\"avatar\">\r\n                                        <LockOutlinedIcon />\r\n                                    </Avatar>\r\n                                </Grid>\r\n                                <Grid item xs={12} align=\"center\">\r\n                                    <Typography component=\"h1\" variant=\"h5\" >\r\n                                        Login\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField variant=\"outlined\"\r\n                                               required\r\n                                               fullWidth\r\n                                               id=\"email\"\r\n                                               label=\"Email Address\"\r\n                                               name=\"email\"\r\n                                               autoComplete=\"email\"\r\n                                               value={this.state.userDetails.email}\r\n                                               onChange = { user => this.handlechange(user, 'email') }/>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <TextField variant=\"outlined\"\r\n                                               required\r\n                                               fullWidth\r\n                                               name=\"password\"\r\n                                               label=\"Password\"\r\n                                               type=\"password\"\r\n                                               id=\"password\"\r\n                                               autoComplete=\"current-password\"\r\n                                               value={this.state.userDetails.password1}\r\n                                               onChange = { user => this.handlechange(user, 'password') }/>\r\n                                </Grid>\r\n                                <Grid item xs={12}>\r\n                                    <Button type=\"submit\"\r\n                                            fullWidth\r\n                                            variant=\"contained\"\r\n                                            color=\"primary\"\r\n                                            className=\"submit\"\r\n                                            onClick={this.handleSubmit}>\r\n                                        Login\r\n                                    </Button>\r\n                                </Grid>\r\n    \r\n                                <Grid item align=\"center\">\r\n                                    <Link href=\"/signup\" variant=\"body2\">\r\n                                        Not Registered yet? Sign up\r\n                                    </Link>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </form>\r\n                    </div>\r\n                </Container>\r\n\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        error: state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (username, password) => dispatch(actions.authLogin(username, password)) \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import axios from 'axios';\nconst API_URL = 'https://asutravlendar.herokuapp.com/';\n\nexport default class EventsService{\n\n    createEvent(event){\n        const url = API_URL+'/api/events/';\n        return  axios.post(url,event,{ headers :{\"Authorization\":\"Token \"+localStorage.token}})\n            .then(response => response.data);\n    }\n\n    getEvents() {\n        const url = API_URL+'/api/events/';\n        return axios.get(url,{ headers :{\"Authorization\":\"Token \"+localStorage.token}})\n            .then(response => response.data);\n    }\n\n    showHomepage(){\n        const url = API_URL;\n        return axios.get(url);\n    }\n\n}","import React from 'react';\nimport AddCircleOutlineTwoToneIcon from '@material-ui/icons/AddCircleOutlineTwoTone';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport Homepage from '../home/Homepage';\nimport { withGoogleMap, GoogleMap, withScriptjs, InfoWindow, Marker } from \"react-google-maps\";\nimport {FormGroup, Button, TextField, InputAdornment } from '@material-ui/core';\nimport Geocode from \"react-geocode\";\nimport Autocomplete from 'react-google-autocomplete';\nimport EventsService from '../../Services/EventsService';\nimport '../createEvent/CreateEvent.css';\nimport { NotificationManager } from 'react-notifications';\nimport Container from '@material-ui/core/Container';\n\n/*\n    Author: Kanchan Wakchaure\n    Date: 11-05-2019\n    Description: Google Map to schedule events\n    References: https://www.digitalocean.com; \n                https://github.com/imranhsayed/google-maps-in-react\n\n*/\n\nGeocode.setApiKey( \"AIzaSyBUopytfPOU40AvS9RkEk0SSg1awyNxNqA\" );\nGeocode.enableDebug();\n\nconst eventService=new EventsService();\n\nclass Map extends React.Component {\n  constructor(props) {\n        super(props);\n        this.state = {\n            eventDetails: {\n                title: '',\n                date: '',\n                time:'',\n                duration: '',\n            },\n            address: '',\n            mapPosition: {\n              lat: this.props.center.lat,\n              lng: this.props.center.lng\n            },\n            markerPosition: {\n                lat: 33.4255,\n                lng: -111.9400\n            },\n            notifyUsers: [],\n            email: '',\n            phone: ''\n        };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  getInitialState() {\n    let initialState = {\n        eventDetails: {\n            title: '',\n            date: '',\n            time:'',\n            duration: ''\n        },\n        address: '',\n        markerPosition: {\n            lat: 33.4255,\n            lng: -111.9400\n        },\n        notifyUsers: [],\n        email: '',\n        phone: '',\n    };\n    return initialState;\n}\n  handleCreate(ref){\n    eventService.createEvent(\n      {\n        \"title\": this.state.eventDetails.title,\n        \"date\": this.state.eventDetails.date,\n        \"time\": this.state.eventDetails.time,\n        \"duration\": this.state.eventDetails.duration,\n        \"destination\": this.state.address,\n        \"notifyUsers\": JSON.stringify(this.state.notifyUsers)\n      }\n    ).then((response)=>{\n      NotificationManager.success(\"You have successfully created an event!\", \"Successful\");\n\n      this.setState(this.getInitialState());\n    }).catch(function (error){\n      if (error.response) {\n\n        if(error.response.status===406){\n            NotificationManager.warning(\"This event conflicts with another event. Please check your agenda.\",\"\",6000);\n        }\n        else if(error.response.status===412){\n            console.log(\"text: \",error.response.data);\n            if(error.response.data==='next'){\n                NotificationManager.warning(\"Travel time between this event and next event is too short. Cannot insert.\",\" \",6000);\n\n            }\n            if(error.response.data==='prev'){\n                NotificationManager.warning(\"Travel time between previous event and this event is too short. Cannot insert.\",\" \",6000);\n            }\n            if(error.response.data==='both'){\n                NotificationManager.warning(\"Travel time between both the previous event and next event with respect to this event is too short. Cannot insert.\",\" \",6000);\n            }\n\n\n        }\n        else if(error.response.status===400){\n\n            if(error.response.data.title!==undefined){\n                NotificationManager.error(\"Please provide an event description\", \"Error\");\n            }\n            if(error.response.data.date!==undefined){\n                NotificationManager.error(\"Please provide a date\", \"Error\");\n            }\n            if(error.response.data.time!==undefined){\n                NotificationManager.error(\"Please provide a time\", \"Error\");\n            }\n            if(error.response.data.destination!==undefined){\n                NotificationManager.error(\"Please provide a location\", \"Error\");\n            }\n\n        }\n        else if(error.response.status===500){\n\n            if(error.response.data=='API'){\n                NotificationManager.error(\"Internal server error due to google MAP API\",\"Error\");\n            }\n\n            if(error.response.data=='unreachable')\n            {\n                NotificationManager.error(\"Address entered is unreachable.\",\"Error\");\n            }\n\n        }\n        else{\n            NotificationManager.error(\"Unable to create an event at the moment.\", \"Error\");\n        }\n\n    }\n\n    });\n\n  }\n\n\thandleSubmit(event) {\n    event.preventDefault();\n    this.handleCreate(this);\n  }\n\n  handleInputChange(event, inputPropName) {\n        const newState = Object.assign({}, this.state);\n        newState.eventDetails[inputPropName] = event.target.value;\n        this.setState(newState);\n  }\n\n  handleEmailChange = idx => evt => {\n        const newNotifyUsers = this.state.notifyUsers.map((notifyUser, sidx) => {\n          if (idx !== sidx) return notifyUser;\n          return { ...notifyUser, email: evt.target.value };\n        });\n\n        this.setState({ notifyUsers: newNotifyUsers });\n  };\n\n  handlePhoneChange = idx => evt => {\n        const newNotifyUsers = this.state.notifyUsers.map((notifyUser, sidx) => {\n          if (idx !== sidx) return notifyUser;\n          return { ...notifyUser, phone: evt.target.value };\n        });\n\n        this.setState({ notifyUsers: newNotifyUsers });\n  };\n\n  handleInputs = () => {\n    this.setState({\n      notifyUsers: this.state.notifyUsers.concat([{ email: '',phone:'' }])\n    });\n  };\n\n  handleRemoveInput = idx => () => {\n    this.setState({\n      notifyUsers: this.state.notifyUsers.filter((s, sidx) => idx !== sidx)\n    });\n  };\n\n  /**\n   * Get the current address from the default map position and set those values in the state\n   */\n  componentDidMount() {\n    Geocode.fromLatLng( this.state.mapPosition.lat , this.state.mapPosition.lng ).then(\n      response => {\n        const address = response.results[0].formatted_address;\n\n        this.setState( {\n          address: ( address ) ? address : ''\n        } )\n      },\n      error => {\n        console.error( error );\n      }\n    );\n  };\n  /**\n   * Component should only update ( meaning re-render ), when the user selects the address, or drags the pin\n   *\n   * @param nextProps\n   * @param nextState\n   * @return {boolean}\n   */\n  shouldComponentUpdate( nextProps, nextState ){\n    if (\n      this.state.markerPosition.lat !== this.props.center.lat ||\n      this.state.address !== nextState.address\n    ) {\n      return true\n    } else if ( this.props.center.lat === nextProps.center.lat ){\n      return false\n    }\n  }\n\n  /**\n   * Get the address and set the address input value to the one selected\n   *\n   * @param addressArray\n   * @return {string}\n   */\n  getState = ( addressArray ) => {\n    let state = '';\n    for( let i = 0; i < addressArray.length; i++ ) {\n      for( let i = 0; i < addressArray.length; i++ ) {\n        if ( addressArray[ i ].types[0] && 'administrative_area_level_1' === addressArray[ i ].types[0] ) {\n          state = addressArray[ i ].long_name;\n          return state;\n        }\n      }\n    }\n  };\n  \n  /**\n   * This Event triggers when the marker window is closed\n   *\n   * @param event\n   */\n  onInfoWindowClose = ( event ) => {\n\n  };\n  \n    /**\n   * When the marker is dragged you get the lat and long using the functions available from event object.\n   * Use geocode to get the address, city, area and state from the lat and lng positions.\n   * And then set those values in the state.\n   *\n   * @param event\n   */\n  onMarkerDragEnd = ( event ) => {\n    let newLat = event.latLng.lat(),\n        newLng = event.latLng.lng();\n\n    Geocode.fromLatLng( newLat , newLng ).then(\n      response => {\n        const address = response.results[0].formatted_address;\n        this.setState( {\n          address: ( address ) ? address : '',\n          markerPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n          mapPosition: {\n            lat: newLat,\n            lng: newLng\n          },\n        } )\n      },\n      error => {\n        console.error(error);\n      }\n    );\n  };\n\n\n  /**\n   * When the user types an address in the search box\n   * @param place\n   */\n  onPlaceSelected = ( place ) => {\n    console.log( 'plc', place );\n    const address = place.formatted_address,\n          latValue = place.geometry.location.lat(),\n          lngValue = place.geometry.location.lng();\n    // Set these values in the state.\n    this.setState({\n      address: ( address ) ? address : '',\n      markerPosition: {\n        lat: latValue,\n        lng: lngValue\n      },\n      mapPosition: {\n        lat: latValue,\n        lng: lngValue\n      },\n    })\n  };  \n\n  render() {\n    if(localStorage.getItem('token')==null){\n      return <Homepage/>\n    }\n    else\n    {\n      const AsyncMap = withScriptjs(\n        withGoogleMap(\n          props => (\n            <GoogleMap google={ this.props.google }\n                       defaultZoom={ this.props.zoom }\n                       defaultCenter={{ lat: this.state.mapPosition.lat, lng: this.state.mapPosition.lng }}\n            >\n            \n            { /* InfoWindow on top of marker */ }\n            <InfoWindow\n                onClose={this.onInfoWindowClose}\n                position={{ lat: ( this.state.markerPosition.lat + 0.0018 ), lng: this.state.markerPosition.lng }}>   \n              <div>\n                <span style={{ padding: 0, margin: 0 }}>{ this.state.address }</span>\n              </div>\n            </InfoWindow>\n              \n            {/*Marker*/}\n            <Marker google={this.props.google}\n                    name={'Dolores park'}\n                    draggable={true}\n                    onDragEnd={ this.onMarkerDragEnd }\n                    position={{ lat: this.state.markerPosition.lat, lng: this.state.markerPosition.lng }}/>\n            <Marker />\n            <br/>\n            {/* For Auto complete Search Box */}\n            <Autocomplete\n              style={{\n                width: '99%',\n                height: '40px',\n                align: 'center',\n                paddingLeft: '5px',\n                paddingRight: '5px',\n                marginTop: '2px',\n                marginBottom: '500px',\n                marginRight: '5px',\n                justify: 'center'\n              }}\n              onPlaceSelected={ this.onPlaceSelected }\n              types={['(regions)']}\n            />\n            \n            </GoogleMap>\n          )\n        )\n      );\n\n      let map;\n      if( this.props.center.lat !== undefined ) {\n        map = \n        <Container>\n            <form style={{backgroundColor: 'white', marginTop: '30px', marginBottom: '0px'}}>\n              <FormGroup>\n                <h2 style={{textAlign: 'center', color: \"#3f51b5\"}}> <u>CREATE EVENT</u ></h2><br/>\n              </FormGroup>\n              <FormGroup>\n                <TextField variant=\"outlined\"\n                           required\n                           id=\"title\"\n                           label=\"Event description\"\n                           name=\"title\"\n                           value={this.state.eventDetails.title}\n                           style={{paddingLeft: '5px',paddingRight:'5px', height:'45px'}}\n                           onChange = { event => this.handleInputChange(event, 'title') }\n                />\n              </FormGroup>\n              <br/> <br/>\n              <FormGroup>\n                <TextField variant=\"outlined\"\n                           required\n                           type=\"date\"\n                           id=\"date\"\n                           label=\"Date\"\n                           name=\"date\"\n                           value={this.state.eventDetails.date}\n                           style={{paddingLeft: '5px',paddingRight:'5px', height:'45px'}}\n                           InputLabelProps={{ shrink: true }}\n                           onChange = { event => this.handleInputChange(event, 'date') }\n                  />\n              </FormGroup><br/><br/>\n              <FormGroup>\n                <TextField variant=\"outlined\"\n                           required\n                           type=\"time\"\n                           id=\"time\"\n                           label=\"Time\"\n                           name=\"time\"\n                           value={this.state.eventDetails.time}\n                           style={{paddingLeft: '5px',paddingRight:'5px', height:'45px'}}\n                           InputLabelProps={{ shrink: true }}\n                           onChange = { event => this.handleInputChange(event, 'time') }\n                />\n              </FormGroup><br/><br/>\n              <FormGroup>\n                <TextField variant=\"outlined\"\n                           type=\"number\"\n                           required\n                           id=\"duration\"\n                           label=\"Duration (minutes)\"\n                           name=\"duration\"\n                           value={this.state.eventDetails.duration}\n                           style={{paddingLeft: '5px',paddingRight:'5px', height:'45px'}}\n                           onChange = { event => this.handleInputChange(event, 'duration') }\n                /><br/>\n              </FormGroup><br/>\n              <FormGroup>\n                <TextField variant=\"outlined\"\n                           required\n                           id=\"address\"\n                           label=\"Address\"\n                           name=\"address\"\n                           readOnly=\"readOnly\"\n                           value={this.state.address}\n                           style={{paddingLeft: '5px',paddingRight:'5px'}}\n                           onChange = { event => this.handleInputChange(event, 'address') }/>\n              </FormGroup> <br/>\n              <FormGroup>\n              <AsyncMap\n                  googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBUopytfPOU40AvS9RkEk0SSg1awyNxNqA&libraries=places\"\n                  loadingElement={\n                    <div style={{ height: `100%`, paddingLeft: '5px',paddingRight:'5px' }} />\n                  }\n                  containerElement={\n                    <div style={{ height: this.props.height , paddingLeft: '5px', paddingRight:'5px'}} />\n                  }\n                  mapElement={\n                    <div style={{ height: `100%`, paddingLeft: '5px', paddingRight:'5px'}} />\n                  } \n              />\n              </FormGroup>\n            <br/><br/><br/>\n            <FormGroup>\n                <div>\n                    {this.state.notifyUsers.map((notifyUser, idx) => (\n                    <div>\n                      <TextField value={notifyUser.email}\n                                 variant=\"outlined\"\n                                 style={{paddingLeft: '5px',paddingRight:'5px',paddingBottom:'5px', width:'45%'}}\n                                 label=\"User email ID\"\n                                 onChange={this.handleEmailChange(idx)}/>\n                      <TextField value={notifyUser.phone}\n                                 variant=\"outlined\"\n                                 style={{paddingRight:'5px', paddingBottom:'5px', width:'45%'}}\n                                 label=\"User phone number\"\n                                 onChange={this.handlePhoneChange(idx)}/>\n                        <HighlightOffIcon type=\"button\"\n                                          onClick={this.handleRemoveInput(idx)}\n                        />\n                    </div>\n                    ))}\n                </div>\n                <br/>\n                <div onClick={this.handleInputs}>\n                  <InputAdornment position=\"end\"\n                                  style={{height: '50px', paddingRight: '40%'}}>\n                    <AddCircleOutlineTwoToneIcon />\n                    <label>Send text messages to users</label>\n                    </InputAdornment>\n                </div>\n              </FormGroup>  \n              <br/>\n            <FormGroup>\n            <div style={{textAlign: 'center', marginLeft: '5px', marginRight: '5px'}}> \n            <Button fullWidth variant=\"contained\" size=\"large\" color=\"primary\" onClick={this.handleSubmit} > \n              Create Event                       \n            </Button>  \n            </div>\n            </FormGroup>\n            <br/>          \n            </form>\n            </Container>\n      } else {\n        map = <div style={{height: this.props.height}} />\n      }\n      return( map );       \n    }\n  }\n  \n}\n\nexport default Map;","import React from 'react';\nimport './CreateEvent.css';\nimport Map from '../map/Map.js';\n\n/*\n    Author: Kanchan Wakchaure\n    Date: 11-05-2019\n    Description: Create event page to schedule events\n*/\n\nclass CreateEvent extends React.Component {\n    render(){\n        return(\n            <div style={{ marginTop: '-10px' }} >\n                <Map\n                    google={this.props.google}\n                    center={{lat: 33.424564, lng: -111.928001}}\n                    height='300px'\n                    zoom={15}\n                />\n            </div>\n        )\n    }\n}\nexport default CreateEvent;","//@author raisa 10-08-19\nimport  React, { Component } from  'react';\nimport EventsService from '../../Services/EventsService';\nimport './ListEvent.css';\nimport Homepage from '../home/Homepage';\nimport { NotificationManager } from 'react-notifications';\n\nconst eventService=new EventsService();\n\nclass ListEvent extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state  = {\n            events: [],\n            show:false\n\n        };\n\n    }\n    componentDidMount() {\n    //\n        var  self  =  this;\n        eventService.getEvents().then(function (result) {\n            //console.log(\"status:\",result.status)\n            self.setState({ events:  result.data})\n            self.setState({show:true})\n        }).catch(function (error){\n            if (error.response){\n                if(error.response.status===404){\n                    self.setState({show:false})\n                    NotificationManager.info(\"You have no events on today's date to display. Please add some events on today's date.\");\n                }\n\n            }\n\n        });\n\n    }\n\n    render(){\n        if(localStorage.getItem('token')==null){\n            return <Homepage/>\n        }\n        else\n        {\n\n            if(this.state.show){\n\n                return (\n                <div className=\"event_list\">\n                    <ul>\n                        <li>\n                            <div>Description</div>\n                            <div>Time</div>\n                            <div>Duration</div>\n                            <div>Location</div>\n                        </li>\n                        {this.state.events.map(e=>\n                            <li key={e.id} >\n                                <div>{e.title}</div>\n                                <div className=\"event_list_date\">{e.time}</div>\n                                <div>{e.duration}</div>\n                                <div>{e.destination}</div>\n                            </li>\n                        )}\n                    </ul>\n                </div>\n                );\n\n            }\n            else{\n\n                return(\n                    <div>\n                    </div>\n\n                )\n\n            }\n\n        }   \n    }\n}\n\nexport default ListEvent;","export default \n [\n  {\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#ebe3cd\"\n      }\n    ]\n  },\n  {\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#523735\"\n      }\n    ]\n  },\n  {\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#f5f1e6\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"administrative\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#c9b2a6\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"administrative.land_parcel\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#dcd2be\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"administrative.land_parcel\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#ae9e90\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"landscape.natural\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#dfd2ae\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#dfd2ae\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#93817c\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi.park\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#a5b076\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"poi.park\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#447530\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#f5f1e6\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.arterial\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#fdfcf8\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.highway\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#f8c967\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.highway\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#e9bc62\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.highway.controlled_access\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#e98d58\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.highway.controlled_access\",\n    \"elementType\": \"geometry.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#db8555\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"road.local\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#806b63\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"transit.line\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#dfd2ae\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"transit.line\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#8f7d77\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"transit.line\",\n    \"elementType\": \"labels.text.stroke\",\n    \"stylers\": [\n      {\n        \"color\": \"#ebe3cd\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"transit.station\",\n    \"elementType\": \"geometry\",\n    \"stylers\": [\n      {\n        \"color\": \"#dfd2ae\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"water\",\n    \"elementType\": \"geometry.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#b9d3c2\"\n      }\n    ]\n  },\n  {\n    \"featureType\": \"water\",\n    \"elementType\": \"labels.text.fill\",\n    \"stylers\": [\n      {\n        \"color\": \"#92998d\"\n      }\n    ]\n  }\n];\n","/*\n    Author: Namratha Olety Venkatesh\n    Date: 11-06-2019\n    Description: Map Control for Travlendar event view\n    References: https://gist.github.com/jgimbel/6a36d60e28aaf453d0093ddc47f36533\n*/\nimport { Component } from 'react'\nimport { createPortal } from 'react-dom'\nimport { MAP } from 'react-google-maps/lib/constants'\nimport PropTypes from 'prop-types'\nexport default class MapControl extends Component {\n\n  static contextTypes = { [MAP]: PropTypes.object }\n\n  componentWillMount() {\n    this.map = this.context[MAP]\n    this.controlDiv = document.createElement('div')\n    this.map.controls[this.props.position].push(this.controlDiv)\n  }\n  componentWillUnmount() {\n    this.map.controls[this.props.position].removeAt(this.divIndex)\n  }\n  render() {\n    return createPortal(this.props.children, this.controlDiv)\n  }\n}","import React, { useState, useEffect } from \"react\";\nimport {\n  withGoogleMap,\n  withScriptjs,\n  GoogleMap,\n  Marker,\n  InfoWindow,\n  DirectionsRenderer,\n} from \"react-google-maps\";\nimport Button from '@material-ui/core/Button';\nimport mapStyles from \"./mapStyles/retromapStyles\";\nimport EventsService from '../../Services/EventsService';\nimport './MapView.css';\nimport Homepage from '../home/Homepage';\nimport { NotificationManager } from 'react-notifications';\nimport MapControl from './MapControl';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\n\nfunction Map() {\n    const [events, setEvents]=useState([]);\n    const [directions, setDirections] = useState(null);\n    const [selectedPark, setSelectedPark] = useState(null);\n    const [error, setError] = useState(null);\n    const [no_event_text, setNo_event_text]=useState(\"\");\n    const [show, setShow]=useState(false);\n    const google=window.google;\n    let labels='ABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\n\n\n    useEffect(() => {\n    const eventService=new EventsService();\n    eventService.getEvents().then(function (result) {\n    setEvents(result.data);\n    console.log(result);\n    setShow(true);\n    //events=result.data;\n    }).catch(function (error){\n            if (error.response){\n                if(error.response.status===404){\n                    NotificationManager.info(\"You have no events on today's date to display. Please add some events on today's date.\")\n                    setShow(false);\n                }\n            }\n    });\n\n    const listener = e => {\n        if (e.key === \"Escape\") {\n        setSelectedPark(null);\n        }\n    };\n    window.addEventListener(\"keydown\", listener);\n    return () => {\n    window.removeEventListener(\"keydown\", listener);\n    };\n\n\n    }, []);\n\n    useEffect(()=>{\n\n        const waypoints = events.map(p => ({\n        location: { lat: parseFloat(p.lat), lng: parseFloat(p.long)},\n        stopover: true\n        }));\n        console.log(\"Events\",events);\n\n        const origin = { lat:33.377210, lng:-111.908560}//waypoints.shift().location;\n        //const destination = { lat:33.572400, lng:-112.118540} //waypoints.pop().location;//\n\n        const directionsService = new google.maps.DirectionsService();\n\n        directionsService.route(\n        {\n            origin: origin,\n            destination: origin,\n            travelMode: google.maps.TravelMode.DRIVING,\n            waypoints: waypoints,\n\n        },\n        (result, status) => {\n            //console.log(\"RESULT:\"+result)\n            if (status === google.maps.DirectionsStatus.OK) {\n                setDirections(result);\n                console.log(\"Directions\",result)\n            } else {\n            setError(result);\n            }\n        });\n\n    },[events])\n\n\n\n    if (error) {\n    return <h1 class=\"error\">one of the location unreachable</h1>;\n    }\n\n    if(show==true){\n    let originMarker = null;\n    let i=0;\n    originMarker = (\n        <Marker\n          defaultLabel=\"HOME\"\n          defaultIcon={null}\n          position={{\n            lat: 33.377210,\n            lng: -111.908560\n          }}\n        />\n      );\n\n        return (\n            <GoogleMap\n                defaultZoom={10}\n                defaultCenter={{ lat: 33.4255, lng: -111.9400 }}\n                defaultOptions={{ styles: mapStyles }}\n            >\n            <MapControl position={google.maps.ControlPosition.TOP_RIGHT}>\n     <Button color=\"inherit\" href=\"/previewroute\"><VisibilityIcon/> &nbsp;PREVIEW</Button>\n    </MapControl>\n            {originMarker}\n            {\n                directions && (\n                <DirectionsRenderer\n                 directions={directions}\n                 options={{\n                 /*\n                    polylineOptions: {\n                    storkeColor: \"#2249a3\",\n                    strokeOpacity: 0.4,\n                    strokeWeight: 4\n                    },\n                    preserveViewport: true,\n                    */\n                    suppressMarkers: true,\n\n                  }}\n\n                 />\n                )\n\n            }\n\n            {\n            events.map((park,i) => (\n                <Marker\n                    key={park.id}\n                    defaultLabel={labels[i]}\n                    //defaultIcon={park.id.toString()}\n                    position={{\n                        lat: parseFloat(park.lat),\n                        lng: parseFloat(park.long)\n                    }}\n                    onClick={() => {\n                        setSelectedPark(park);\n                    }}\n\n                />\n            )\n            )}\n\n            {selectedPark && (\n                <InfoWindow\n                onCloseClick={() => {\n                setSelectedPark(null);\n            }}\n\n            position={{\n                lat: parseFloat(selectedPark.lat),\n                lng: parseFloat(selectedPark.long)\n            }}\n            >\n            <div>\n                <h2>{selectedPark.title}</h2>\n                <p>{selectedPark.destination}</p>\n                <p>{selectedPark.title}</p>\n                <p>{selectedPark.time}</p>\n            </div>\n                </InfoWindow>\n            )}\n                </GoogleMap>\n            );\n\n    }\n    else{\n        return(\n                <div>\n                    <GoogleMap\n                    defaultZoom={10}\n                    defaultCenter={{ lat: 33.4255, lng: -111.9400 }}\n                    defaultOptions={{ styles: mapStyles }}\n                    >\n                    </GoogleMap>\n                 </div>\n        )\n\n    }\n\n}\n\nconst MapWrapped = withScriptjs(withGoogleMap(Map));\n\n\n\nexport default function MAP() {\n  if(localStorage.getItem('token')==null){\n    return <Homepage/>\n  }\n  else\n  {\n        return (\n        <div className=\"map\" /*style={{ width: \"45vw\", height: \"90vh\" }}*/>\n          <MapWrapped\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${\n              process.env.REACT_APP_GOOGLE_KEY\n            }`}\n            loadingElement={<div style={{ height: `100%` }} />}\n            containerElement={<div style={{ height: `100%` }} />}\n            mapElement={<div style={{ height: `100%` }} />}\n          />\n        </div>\n        );\n\n\n  }\n}\n\n\n\n//directionsService taken from https://github.com/tomchentw/react-google-maps/blob/master/src/components/DirectionsRenderer.md","export const HOMEPAGE = '/';\nexport const SIGNUP = '/Signup';\nexport const LOGIN = '/Login';\nexport const CREATE_EVENT = '/CreateEvent';\nexport const EVENTS_LIST = '/listevent';\nexport const EVENTS_MAP= '/map';\nexport const EMAIL = '/emailalert';\nexport const TEXT = '/textalert';\nexport const ABOUT = '/about';\nexport const PREVIEW_ROUTE = '/previewroute';\n\n","import axios from 'axios';\nconst API_URL = 'https://asutravlendar.herokuapp.com/';\n\nexport default class Alert{\n\n    getEmail() {\n    \t const url = API_URL+'/api/alert_email/';\t\n        return axios.get(url,{ headers :{\"Authorization\":\"Token \"+localStorage.token}}).then(response => response.data);\n    }\n\n    getText() {\n        const url = API_URL+'/api/alert_text/';\n        return axios.get(url,{ headers :{\"Authorization\":\"Token \"+localStorage.token}}).then(response => response.data);\n    }\n\n}\n\n","//@author raisa 10-08-19\nimport  React, { Component } from  'react';\nimport Alert from '../../Services/AlertService';\nimport Homepage from '../home/Homepage';\nimport { NotificationManager } from 'react-notifications';\n\nconst alertService=new Alert();\n\nclass Email extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state  = {\n            events: []\n            //nextPageURL:  ''\n        };\n        //this.nextPage  =  this.nextPage.bind(this);\n        //this.handleDelete  =  this.handleDelete.bind(this);\n    }\n    componentDidMount() {\n    //\n        var  self  =  this;\n        alertService.getEmail().then(function (result) {\n            console.log(result);\n            self.setState({ events:  result.data})\n        }).catch(()=>{\n          NotificationManager.error(\"Unable to send email notifications at the moment.\", \"Error\");\n        });\n    }\n\n    render(){\n        NotificationManager.success('Email is sent to your account successfully', \"Successful\") ;\n        this.props.history.push('/');\n        return <Homepage/>;\n    }\n}\n\nexport default Email;","//@author raisa 10-08-19\nimport  React, { Component } from  'react';\nimport Alert from '../../Services/AlertService';\nimport Homepage from '../home/Homepage';\nimport { NotificationManager } from 'react-notifications';\n\nconst alertService=new Alert();\n\n\n\nclass Text extends Component{\n\n    constructor(props) {\n        super(props);\n        this.state  = {\n            events: []\n            //nextPageURL:  ''\n        };\n        //this.nextPage  =  this.nextPage.bind(this);\n        //this.handleDelete  =  this.handleDelete.bind(this);\n    }\n    componentDidMount() {\n    //\n        var  self  =  this;\n        alertService.getText().then(function (result) {\n            console.log(result);\n            self.setState({ events:  result.data})\n        }).catch(()=>{\n          NotificationManager.error(\"Unable to send text notifications at the moment.\", \"Error\");\n        });\n    }\n\n\n    render(){\n            NotificationManager.success('A text message is sent to you phone number') ;\n            this.props.history.push('/');\n            return <Homepage/>;\n    }\n}\n\nexport default Text;","/*\n    Author: Namratha Olety Venkatesh\n    Date: 11-01-2019\n    Description: About page for Travlendar\n    References: https://material-ui.com/getting-started/templates/pricing/\n*/\n\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport React from 'react';\n\nimport './About.css';\nimport namratha from './images/namratha.png';\nimport kanchan from './images/kanchan.jpg';\nimport mounika from './images/mounika.jpg';\nimport kaustuv from './images/kaustuv.jpg';\nimport raisa from './images/raisa.jpg';\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    }\n  },\n  link: {\n    margin: theme.spacing(1, 1.5),\n  },\n  heroContent: {\n    padding: theme.spacing(8, 0, 6),\n  },\n  cardHeader: {\n    backgroundColor: theme.palette.grey[200],\n  },\n  cardPricing: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'baseline',\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst tiers = [\n  {\n    title: 'Kanchan Wakchaure',\n    img: kanchan,\n    buttonText: 'View bio',\n    buttonLink: 'https://www.linkedin.com/in/kanchan-wakchaure-7822238a/',\n    buttonVariant: 'outlined'\n  },\n  {\n    title: 'Namratha Olety',\n    img: namratha,\n    buttonText: 'View bio',\n    buttonLink: 'https://www.linkedin.com/in/namrathaov/',\n    buttonVariant: 'outlined'\n  },\n  {\n    title: 'Mounika Gadde',\n    img: mounika,\n    buttonText: 'View bio',\n    buttonLink: 'https://www.linkedin.com/in/mounika-gadde/',\n    buttonVariant: 'outlined'\n  },\n  {\n    title: 'Kaustuv Deolal',\n    img: kaustuv,\n    buttonText: 'View bio',\n    buttonLink: 'https://www.linkedin.com/in/kaustuv16/',\n    buttonVariant: 'outlined'\n  },\n  {\n    title: 'Raisa Khatun',\n    img: raisa,\n    buttonText: 'View bio',\n    buttonLink: 'https://www.linkedin.com/in/raisa-khatun/',\n    buttonVariant: 'outlined'\n  },\n];\n\n\nexport default function About() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n\n            <div style={{backgroundColor:\"white\", marginRight: \"15%\", marginLeft: \"15%\"}}>\n            <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent} >\n\n        <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          What is Travlendar?\n        </Typography>\n        <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          Travlendar provides the ability to collaboratively plan and schedule day-to-day agenda.\n           The interface provides ability to view everyday agenda on a map. <br/>\n          <br/>For example:\n          A mother can plan her agenda to pick up and drop kids at different locations using a map.\n          <br/><br/>\n          This project is devised as part of the SER 517 - Software Capstone.\n        </Typography>\n      </Container>\n      <hr/>\n      <Container maxWidth=\"sm\" component=\"main\" className={classes.heroContent} >\n        <Typography component=\"h1\" variant=\"h4\" align=\"center\" color=\"textPrimary\" gutterBottom>\n          Who are we?\n        </Typography>\n      </Container>\n      {/* End hero unit */}\n      <Container maxWidth=\"md\" component=\"main\">\n        <Grid container spacing={5} alignItems=\"flex-end\">\n          {tiers.map(tier => (\n            // Enterprise card is full width at sm breakpoint\n            <Grid item key={tier.title} xs={12} md={4}>\n              <Card>\n                <CardHeader\n                  title={tier.title}\n                  titleTypographyProps={{ align: 'center' }}\n                  subheaderTypographyProps={{ align: 'center' }}\n                  className={classes.cardHeader}\n                />\n                <CardContent>\n                  <div className={classes.cardPricing}>\n                      <img src={tier.img} style={{\n     width: '300px',\n     height: '200px',\n  }}/>\n                  </div>\n                </CardContent>\n                <CardActions>\n                  <Button fullWidth variant={tier.buttonVariant} color=\"primary\" href={tier.buttonLink}>\n                    {tier.buttonText}\n                  </Button>\n                </CardActions>\n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n      </div>\n    </React.Fragment>\n  );\n}","/*\n    Author: Namratha Olety Venkatesh\n    Date: 11-01-2019\n    Description: Preview events for Map\n    References: https://dev.to/zerquix18/\n    let-s-play-with-google-maps-and-react-making-a-car-move-through-the-road-like-on-uber-part-1-4eo0\n*/\nimport React from 'react';\nimport { withGoogleMap, withScriptjs, GoogleMap, Polyline, Marker } from 'react-google-maps'\nimport EventsService from '../../Services/EventsService';\nimport './MapView.css';\nimport mapStyles from \"./mapStyles/retromapStyles\";\n\nconst eventService=new EventsService();\nclass MapPreview extends React.Component {\n  state = {\n    progress: [],\n\n  }\n\n  path = []\n\n  velocity = 2000\n  initialDate = new Date()\n\n  getDistance = () => {\n    // seconds between when the component loaded and now\n    const differentInTime = (new Date() - this.initialDate) / 1000 // pass to seconds\n    return differentInTime * this.velocity // d = v*t -- thanks Newton!\n  }\n\n  componentDidMount = () => {\n    this.interval = window.setInterval(this.moveObject, 1000)\n  }\n\n  componentWillUnmount = () => {\n    window.clearInterval(this.interval)\n  }\n\n  moveObject = () => {\n    const distance = this.getDistance()\n    if (! distance) {\n      return\n    }\n\n    let progress = this.path.filter(coordinates => coordinates.distance < distance)\n\n    const nextLine = this.path.find(coordinates => coordinates.distance > distance)\n    if (! nextLine) {\n      this.setState({ progress })\n      return // it's the end!\n    }\n    const lastLine = progress[progress.length - 1]\n\n    const lastLineLatLng = new window.google.maps.LatLng(\n      lastLine.lat,\n      lastLine.lng\n    )\n\n    const nextLineLatLng = new window.google.maps.LatLng(\n      nextLine.lat,\n      nextLine.lng\n    )\n\n    // distance of this line\n    const totalDistance = nextLine.distance - lastLine.distance\n    const percentage = (distance - lastLine.distance) / totalDistance\n\n    const position = window.google.maps.geometry.spherical.interpolate(\n      lastLineLatLng,\n      nextLineLatLng,\n      percentage\n    )\n\n    progress = progress.concat(position)\n    this.setState({ progress })\n  }\nrenderData = () => {\nlet t = this;\nlet es = []\n  eventService.getEvents().then(function (result) {\n  var items = result.data\n  for(var i = 0; i<items.length; i++) {\n\n    t.path.push({lat: Number(items[i][\"lat\"]), lng: Number(items[i][\"long\"])})\n  }\n  console.log(t.path)\n}).catch(()=>{\n          alert('Create your events for today.');\n        }).finally(()=>{\n        this.path = this.path.map((coordinates, i, array) => {\n      if (i === 0) {\n        return { ...coordinates, distance: 0 } // it begins here!\n      }\n      const { lat: lat1, lng: lng1 } = coordinates\n      const latLong1 = new window.google.maps.LatLng(lat1, lng1)\n\n      const { lat: lat2, lng: lng2 } = array[0]\n      const latLong2 = new window.google.maps.LatLng(lat2, lng2)\n\n      // in meters:\n      const distance = window.google.maps.geometry.spherical.computeDistanceBetween(\n        latLong1,\n        latLong2\n      )\n\n      return { ...coordinates, distance }\n    })\n\n    console.log(this.path)\n\n        })\n}\n  componentWillMount = () => {\n  this.renderData();\n  }\n\n  render = () => {\n    return (\n      <GoogleMap\n        defaultZoom={10}\n        defaultCenter={{ lat: 33.168040, lng: -111.635400 }}\n        defaultOptions={{ styles: mapStyles }}\n        >\n          { this.state.progress && (\n            <>\n              <Polyline path={this.state.progress} options={{ strokeColor: \"#FF0000 \"}} />\n              <Marker position={this.state.progress[this.state.progress.length - 1]} />\n            </>\n          )}\n      </GoogleMap>\n    )\n  }\n}\n\nconst MapComponent = withScriptjs(withGoogleMap(MapPreview))\n\nexport default () => (\n<div className=\"map\">\n  <MapComponent\n  googleMapURL={`https://maps.googleapis.com/maps/api/js?v=3.exp&libraries=geometry,drawing,places&key=${\n          process.env.REACT_APP_GOOGLE_KEY\n        }`}\n  loadingElement={<div style={{ height: `100%` }} />}\n  containerElement={<div style={{ height: `100%` }} />}\n  mapElement={<div style={{ height: `100%` }} />}\n  />\n  </div>\n)\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport Header from './components/header/Header';\nimport Homepage from './components/home/Homepage';\nimport Footer from './components/footer/Footer';\nimport Signup from './components/register/Signup';\nimport Login from './components/login/Login';\nimport CreateEvent from './components/createEvent/CreateEvent';\nimport ListEvent from './components/eventsList/ListEvent';\nimport { connect } from 'react-redux';\nimport * as actions from './store/actions/auth';\nimport Map from './components/map/MapView';\nimport { HOMEPAGE, SIGNUP, LOGIN, CREATE_EVENT, EVENTS_LIST, EVENTS_MAP, EMAIL, TEXT, ABOUT, PREVIEW_ROUTE } from './Routes.js';\nimport Email from './components/email/Email';\nimport Text from './components/text/Text';\nimport About from './components/about/About';\nimport MapPreview from './components/map/MapPreview';\n\n\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\nimport 'react-notifications/lib/notifications.css';\n\nclass App extends Component{\n\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  }\n\n\n  render(){\n      return (\n      <div>\n        <Header {...this.props}/>\n\n            <NotificationContainer />\n        <div className=\"cover\">\n            <BrowserRouter>\n                <div>\n                    <Switch>\n                        <Route exact path={HOMEPAGE} component={Homepage} />\n                        <Route path={SIGNUP} component={Signup} />\n                        <Route path={LOGIN} component={Login} />\n                        <Route path={CREATE_EVENT} component={CreateEvent} />\n                        <Route path={EVENTS_LIST} component={ListEvent}/>\n                        <Route path={EVENTS_MAP} component={Map}/>\n                      <Route path={EMAIL} component={Email}/>\n                      <Route path={TEXT} component={Text}/>\n                      <Route path={ABOUT} component={About}/>\n                      <Route path={PREVIEW_ROUTE} component={MapPreview}/>\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        </div>\n        <Footer/>\n        </div>\n      );\n  }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        isAuthenticated: state.token !== null\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility';\n\nconst initialState = {\n    token: null,\n    error: null,\n    loading: false\n}\n\nconst authStart = (state, action) => {\n    return updateObject(state, {\n        error: null,\n        loading: true\n    });\n}\n\nconst authSuccess = (state, action) => {\n    return updateObject(state, {\n        token: action.token,\n        error: null,\n        loading: false\n    });\n}\n\nconst authFail = (state, action) => {\n    return updateObject(state, {\n        error: action.error,\n        loading: false\n    });\n}\n\nconst authLogout = (state, action) => {\n    return updateObject(state, {\n        token: null\n    });\n}\n\nconst reducer = (state=initialState, action) => {\n    switch (action.type) {\n        case actionTypes.AUTH_START: return authStart(state, action);\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state, action);\n        case actionTypes.AUTH_FAIL: return authFail(state, action);\n        case actionTypes.AUTH_LOGOUT: return authLogout(state, action);\n        default:\n            return state;\n    }\n}\n\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from './store/reducers/auth';\n\nconst composeEnhances = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nconst store = createStore(reducer, composeEnhances(\n    applyMiddleware(thunk)\n));\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}